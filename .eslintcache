[{"C:\\Users\\Satish Boddepalli\\Desktop\\GoHarness\\MusicApp\\src\\index.js":"1","C:\\Users\\Satish Boddepalli\\Desktop\\GoHarness\\MusicApp\\src\\components\\Nav.js":"2","C:\\Users\\Satish Boddepalli\\Desktop\\GoHarness\\MusicApp\\src\\components\\Player.js":"3"},{"size":560,"mtime":1606719896058,"results":"4","hashOfConfig":"5"},{"size":562,"mtime":1608447083780,"results":"6","hashOfConfig":"5"},{"size":2717,"mtime":1609131649495,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ani0cx",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"C:\\Users\\Satish Boddepalli\\Desktop\\GoHarness\\MusicApp\\src\\index.js",[],"C:\\Users\\Satish Boddepalli\\Desktop\\GoHarness\\MusicApp\\src\\components\\Nav.js",[],"C:\\Users\\Satish Boddepalli\\Desktop\\GoHarness\\MusicApp\\src\\components\\Player.js",["15","16","17"],"import React,{useRef,useState} from 'react'\r\nimport '../styles/player.css'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faPlay,faAngleLeft,faAngleRight,faPause} from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Player({currentSong,isPlaying,setIsPlaying,audioRef,songInfo,setSongInfo,songs,setCurrentSong}) {\r\n\r\n    \r\n\r\n   \r\n\r\n    const playSongHandler=()=>{\r\n        if(isPlaying){\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        }else{\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    }\r\n\r\n    const getTime=(time)=>{\r\n        return (\r\n            Math.floor(time/60)+\":\"+(\"0\"+Math.floor(time%60)).slice(-2)\r\n        )\r\n    }\r\n\r\n    const skipTrackHandler=(direction)=>{\r\n        let currentIndex=songs.findIndex((song)=>song.id === currentSong.id)\r\n        if(direction === 'skip-forward'){\r\n            setCurrentSong(songs[(currentIndex+1)%songs.length])\r\n        }\r\n        if(direction === 'skip-back'){\r\n            if((currentIndex-1)%songs.length === -1){\r\n                setCurrentSong(songs[songs.length-1])\r\n                return;\r\n            }\r\n            setCurrentSong(songs[(currentIndex-1)%songs.length])\r\n        }\r\n    }\r\n\r\n\r\n    const dragHandler=(e)=>{\r\n        audioRef.current.currentTime=e.target.value;\r\n        setSongInfo({...songInfo,currentTime:e.target.value})\r\n    }\r\n       \r\n    \r\n\r\n    return (\r\n        <div className=\"player\">\r\n\r\n            <div className=\"time-control\">\r\n             <p>{getTime(songInfo.currentTime)}</p>\r\n\r\n                <input \r\n                min={0}\r\n                max={songInfo.duration || 0}  \r\n                value={songInfo.currentTime} \r\n                type=\"range\" \r\n                onChange={dragHandler}/>\r\n\r\n                <p>{getTime(songInfo.duration)}</p>\r\n            </div>\r\n\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon\r\n                 size=\"2x\" \r\n                 className=\"skip-back\" \r\n                 icon={faAngleLeft}\r\n                onClick={()=>skipTrackHandler('skip-back')}\r\n                 />\r\n\r\n                <FontAwesomeIcon \r\n                size=\"2x\" \r\n                className=\"play\" \r\n                icon={faPlay} \r\n                onClick={playSongHandler}\r\n                icon={isPlaying ? faPause: faPlay}\r\n                />\r\n\r\n                <FontAwesomeIcon \r\n                size=\"2x\" \r\n                className=\"skip-forward\" \r\n                icon={faAngleRight}\r\n                onClick={()=>skipTrackHandler('skip-forward')}\r\n                />\r\n            </div>\r\n\r\n\r\n           \r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Player\r\n",{"ruleId":"18","severity":1,"message":"19","line":1,"column":15,"nodeType":"20","messageId":"21","endLine":1,"endColumn":21},{"ruleId":"18","severity":1,"message":"22","line":1,"column":22,"nodeType":"20","messageId":"21","endLine":1,"endColumn":30},{"ruleId":"23","severity":1,"message":"24","line":79,"column":17,"nodeType":"25","endLine":79,"endColumn":51},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute"]